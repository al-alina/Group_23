Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.


Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
touch HW2
 2. Сценарий перенесите в этот файл.
vim HW2
:e
p
esc :wq
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.
 ~/GIT/git_repo/group_23/HW/HW2

 4. Создать файл “new.json” 
touch new.json

 5. Добавить файл под гит.
git add new.json

 6. Закоммитить файл.
 git commit -m "adding new.json file"

 7. Отправить файл на внешний GitHub репозиторий.
git push

 8. Создать файлы new2.json, new2.xml, new2.txt
touch new2.json new2.xml new2.txt

 9. Добавить файлы под гит.
git add .

 10. Закоммитить файлы.
git commit -m "adding new2 .json, .txt, .xml files"

 11. Отправить файлы на внешний GitHub репозиторий.
git push

 12. Отредактировать содержание файла “new2.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата).
vim new2.txt
i 

name_Alina
age_30
salary_10000

esc :wq

 13. Отредактировать содержание файла “new2.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
vim new2.json
i

{
	"name": "Alina",
	"age": "30",
	"salary": "10000"
}

esc :wq

 14. Добавить и закоммитить “new2.txt” одной строчкой. 
git commit -am "adding info"

 15. Добавить и закоммитить “new2.json” одной строчкой. 
git commit -am "adding info"

 16. Отправить изменения на внешний репозиторий.
git push

 17. Отредактировать содержание файла “new2.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
vim new2.xml
i
<?xml version="1.0" encoding="utf-8"?>
    <root> 
        <name>Alina</name>
        <age>30</age>
        <salary>10000</salary>
    </root>
esc :wq

 18. Добавить и закоммитить “new2.xml” одной строчкой. 
git commit -am "adding info new2.xml"

 19. Отправить изменения на внешний репозиторий.
git push

 20. Отправить предыдущее домашнее задание по GitBush Terminal на внешний репозиторий.
/GIT/git_repo/group_23/HW
mkdir HW1
cd HW1
mv ~/Desktop/HW1.txt ~/GIT/git_repo/group_23/HW/HW1/
add .
git commit -m "adding HW1"
git push

 21. В веб интерфейсе GitHub создать файл new3.txt.
group_23/HW/HW2
add file
create new file
group_23/HW/HW2/new3.txt

comment: create new3.txt file
commit new file

 22. Отредактировать в веб интерфейсе содержание файла “new3.txt” - написать информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить).
open file new3.txt
edit this file
	sitcom_Friends
	country_Malta
	food_Chololate
comment:update new3.txt

 23. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
press 'Commit changes'

 24. Синхронизировать внешний и локальный репозитории (слить изменения с внешнего репозитория) 
git pull

 25. Отредактировать в веб интерфейсе содержание файла “new2.json” - добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить). Всё в формате JSON.
open file new3.txt
edit this file
{
	"sitcom": "Friends",
	"country": "Malta",
	"food": "Chocolate"
} 

comment: update new2.json file

 26. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
press 'Commit changes'

 27. Синхронизировать внешний и локальный репозитории 
git pull

 28. Отредактировать в веб интерфейсе содержание файла “new2.xml” - добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить). Всё в формате XML.
open file new2.xml
edit this file 

<?xml version="1.0" encoding="utf-8"?>
    <root> 
        <sitcom>Friends</sitcom>
        <country>Malta</country>
        <food>Chocolate</food>
    </root>

comment: update new2.xml file

 29. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
press 'Commit changes'

 30. Синхронизировать внешний и локальный репозитории 
git pull